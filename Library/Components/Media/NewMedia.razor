@rendermode RenderMode.InteractiveServer
@using Library.Components.Elements
@using System.Globalization
@using Microsoft.AspNetCore.Components.Web
@using ViewModels = Library.Models.ViewModels;
@using Library.Models.ViewModels.Media;


<div class="modal" tabindex="-1" role="dialog" style="display: block;" aria-modal="true" aria-labelledby="newMediaModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="newMediaModalLabel">Add New Media</h5>
                <button type="button" class="close" aria-label="Close" @onclick="OnClose">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="mediaType">Select Media Type</label>
                    <select id="mediaType" class="form-control" @onchange="OnMediaTypeChange" aria-describedby="mediaTypeHelp" required>
                        <option value="0">Book</option>
                        <option value="1">Music</option>
                        <option value="2">Movie</option>
                    </select>
                    <small id="mediaTypeHelp" class="form-text text-muted">Choose the type of media you want to add.</small>
                </div>

                @if (selectedMediaType == MediaType.Book)
                {
                    <EditForm Model="@newMedia.Book" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="form-group">
                            <label for="bookTitle">Title <span class="text-danger">*</span></label>
                            <InputText id="bookTitle" class="form-control" @bind-Value="newMedia.Book.Title" required aria-required="true" />
                            <ValidationMessage For="@(() => newMedia.Book.Title)" />
                        </div>
                        <div class="form-group">
                            <label for="author">Author</label>
                            <InputText id="author" class="form-control" @bind-Value="newMedia.Book.Author" aria-describedby="authorHelp" />
                            <small id="authorHelp" class="form-text text-muted">Enter the author's name.</small>
                            <ValidationMessage For="@(() => newMedia.Book.Author)" />
                        </div>
                        <div class="form-group">
                            <label for="isbn">ISBN</label>
                            <InputText id="isbn" class="form-control" @bind-Value="newMedia.Book.ISBN" aria-describedby="isbnHelp" />
                            <small id="isbnHelp" class="form-text text-muted">Enter the ISBN of the book.</small>
                            <ValidationMessage For="@(() => newMedia.Book.ISBN)" />
                        </div>
                        <div class="form-group">
                            <label for="published">Published Date</label>
                            <InputDate id="published" class="form-control" @bind-Value="newMedia.Book.Published" />
                            <ValidationMessage For="@(() => newMedia.Book.Published)" />
                        </div>
                        <div class="form-group">
                            <label for="description">Description</label>
                            <InputTextArea id="description" class="form-control" @bind-Value="newMedia.Book.Description" />
                            <ValidationMessage For="@(() => newMedia.Book.Description)" />
                        </div>
                        <div class="form-group">
                            <label for="summary">Summary</label>
                            <InputTextArea id="summary" class="form-control" @bind-Value="newMedia.Book.Summary" />
                            <ValidationMessage For="@(() => newMedia.Book.Summary)" />
                        </div>
                    </EditForm>
                }
                else if (selectedMediaType == MediaType.Music)
                {
                    <EditForm Model="@newMedia.Music" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="form-group">
                            <label for="musicTitle">Title <span class="text-danger">*</span></label>
                            <InputText id="musicTitle" class="form-control" @bind-Value="newMedia.Music.Title" required aria-required="true" />
                            <ValidationMessage For="@(() => newMedia.Music.Title)" />
                        </div>
                        <div class="form-group">
                            <label for="album">Album</label>
                            <InputText id="album" class="form-control" @bind-Value="newMedia.Music.Album" aria-describedby="albumHelp" />
                            <small id="albumHelp" class="form-text text-muted">Enter the album name.</small>
                            <ValidationMessage For="@(() => newMedia.Music.Album)" />
                        </div>
                        <div class="form-group">
                            <label for="singer">Singer</label>
                            <InputText id="singer" class="form-control" @bind-Value="newMedia.Music.Singer" />
                            <ValidationMessage For="@(() => newMedia.Music.Singer)" />
                        </div>
                        <div class="form-group">
                            <label for="writer">Writer</label>
                            <InputText id="writer" class="form-control" @bind-Value="newMedia.Music.Writer" />
                            <ValidationMessage For="@(() => newMedia.Music.Writer)" />
                        </div>
                        <div class="form-group">
                            <label for="datePublished">Date Published</label>
                            <InputDate id="datePublished" class="form-control" @bind-Value="newMedia.Music.DatePublished" />
                            <ValidationMessage For="@(() => newMedia.Music.DatePublished)" />
                        </div>
                    </EditForm>
                }
                else if (selectedMediaType == MediaType.Movie)
                {
                    <EditForm Model="@newMedia.Movie" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="form-group">
                            <label for="movieTitle">Title <span class="text-danger">*</span></label>
                            <InputText id="movieTitle" class="form-control" @bind-Value="newMedia.Movie.Title" required aria-required="true" />
                            <ValidationMessage For="@(() => newMedia.Movie.Title)" />
                        </div>
                        <div class="form-group">
                            <label for="summary">Summary</label>
                            <InputTextArea id="summary" class="form-control" @bind-Value="newMedia.Movie.Summary" />
                            <ValidationMessage For="@(() => newMedia.Movie.Summary)" />
                        </div>
                        <div class="form-group">
                            <label for="series">Series</label>
                            <InputText id="series" class="form-control" @bind-Value="newMedia.Movie.Series" />
                            <ValidationMessage For="@(() => newMedia.Movie.Series)" />
                        </div>
                        <div class="form-group">
                            <label for="writer">Writer</label>
                            <InputText id="writer" class="form-control" @bind-Value="newMedia.Movie.Writer" />
                            <ValidationMessage For="@(() => newMedia.Movie.Writer)" />
                        </div>
                        <div class="form-group">
                            <label for="dateReleased">Date Released</label>
                            <InputDate id="dateReleased" class="form-control" @bind-Value="newMedia.Movie.DateReleased" />
                            <ValidationMessage For="@(() => newMedia.Movie.DateReleased)" />
                        </div>
                    </EditForm>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="OnClose">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<Library.Components.Elements.Notification Title="Adding Media" Message="Tried to add media" />
